import csv
from pathlib import Path
import file_ops

workspace = Path("participant_pkg")

csv_file = workspace / "contact.csv"

def get_name():
    while True:
        try:
            name = (input("Enter your name: ")) # collects user name
            if (len(name) == 0) or (name.isdigit() == True): # validates user's input and ensure it's neither empty nor numbers
                raise ValueError("Invalid Input, Enter a name.") # prints Error message
            else:
                 return name # returns the name if all the rihgt condition are
        except ValueError as e:
            print("Error: ", e)
        except Exception as e:
            print("Error: ", e)
                 
def get_age():
    while True:    
        try:
            age = (input("Enter your age: ")) # collects user age
            if not age.isnumeric():# validates user's input and ensure it's a  number
                print("Invalid input, Age must be a number")
            else:
                age_input = int(age) # converts the input to an intereger
                if age_input <= 0:# validates user's input and ensure it's not 0 or negative
                    print("Age can\'t be 0 or a negative number")
                else:
                    return age_input # returns the age if all the right condition are met
        except ValueError:
            print("Invalid Input, must be a number.")# prints Error message
        except Exception:
            print("\nAn unexpected error occured")

def get_num():
    while True:     
        try:
            phone = input("Enter Phone Num: ") # collects user's number
            if not phone.isnumeric():# validates user's input and ensure it's a  number
                print("Invalid Input, number can only be digits.")
            elif len(phone) !=11:
                raise ValueError("Invalid Input, Enter valid number")# prints Error message
            else:
                return phone # returns the age if all the right condition are met  
        except ValueError as e:
            print("Error: ", e)

        except Exception as e:
            print("Error: ", e)


def get_track():
    while True:
        try:
            track = input("Enter Track: ") # collects user's track
            if (len(track) == 0) or (track.isdigit() == True): # validates user's input and ensure it's a not emptyt
                raise ValueError("Invalid Input, Track can\'t be empty")# prints Error message
            else:
                return track # returns the track if all the right condition are met
        except ValueError as e:
            print("Error: ", e)
        except Exception as e:
            print("Error: ", e)


def main():
    #welcome to Tee's workshop
    while True:
        try:
            # get participant details
            name = get_name()
            age = get_age()
            num = get_num()
            track = get_track()
            # make the participant into a dict
            participant_dict ={
                "Name":name,
                "Age":age,
                "Number":num,
                "Track":track
            }
            try:
                #save particpant details to csv file
                file_ops.save_participant(csv_file,participant_dict)
                print("Participant details saved to Csv file")

                #ask for if user wants to add new participant
                add_new = input("DO you want to add a new participant? yes or no")
                if add_new != "yes":
                    print("Here is the list of Participant saved")
                    file_ops.load_participant(csv_file)
                    break
            except Exception:
                print("\nAn Error occured while saving to file")
        except Exception:
            print("\nAn Error occured")

if __name__ == "__main__":
    main()

                

